

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
/*package ads.poo;
import com.google.common.collect.Ordering;

import java.util.*;
/*
public class App {
*/
/*
    public static void main(String[] args) {
        Scanner teclado = new Scanner(System.in);

        ArrayList<String> nomes = new ArrayList<>();
        String s = "Joana";

        nomes.add(s);
        nomes.add("Juca");

        //System.out.println(nomes);

        //System.out.println(nomes.size());

        /*if (!nomes.isEmpty()){
            //nomes.removeAll(nomes);
            //ou
            nomes.clear();
        }*/

        /*
        nomes.remove("Juca");
        //ou
        int pos = nomes.indexOf("Juca");
        nomes.remove(pos);
        */

//String[] v = (String[]) nomes.toArray();

//Correção de tipos ou typecasting
//double d = 2.3;
//int i = (int) d;


//for i
        /*for(int i = 0; i < nomes.size(); i++) {
            System.out.println("Nome: "+ nomes.get(i));
        }*/

//for each
        /*for (String elementos: nomes){
            System.out.println("Nome: "+ elementos);
        }*/


//usando lambda
//nomes.forEach(elementos-> System.out.println("Nome: "+ elementos));

//usando lambda
//nomes.forEach(elementos-> {
// System.out.println("Nome: "+ elementos);
//se tiver mais de uma linha
// });

//para imprimir so os argumentos
//nomes.forEach(System.out::println);


//digitar numeros do teclado, enquando não digitar 999 ele continua solicitando

        /*ArrayList<Integer> lista = new ArrayList<>();
        int i = 0;

        while (i != 999) {
            System.out.println("Entre com um numero inteiro: ");
            i = teclado.nextInt();
            if (i != 999) {
                lista.add(i);
            }
        }
        System.out.println(" ");
        Collections.sort(lista);
        lista.forEach(System.out::println);*/

/*
        Stack<Integer>listaPilha = new Stack<>();
        int i = 0;

        while (i != 999) {
            System.out.println("Entre com um numero inteiro: ");
            i = teclado.nextInt();
            if (i != 999) {
                listaPilha.push(i);
            }
        }
        System.out.println(" ");

        while (!listaPilha.isEmpty()){
            System.out.println(listaPilha.pop());
        }
    }
}
*/

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ads.poo;
import java.lang.reflect.Array;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

public class App {

    private int menu(){
        int opcao = 0;
        System.out.println("..::SIGAA 2::..");
        System.out.println("1 - Cadastrar");
        System.out.println("2 - Editar");
        System.out.println("3 - Exluir");
        System.out.println("4 - Listar dados de um aluno");
        System.out.println("5 - Listar dados de todos os alunos");
        System.out.println("6 - Sair");

        Scanner teclado = new Scanner(System.in);
        opcao = teclado.nextInt();
        teclado.nextLine();

        return opcao;
    }
    private boolean cadastrar(){

        return false;
    }

    //-----------------------------------------------------------------------------------------------------------------
    private void EditarAluno(){


    }
//-----------------------------------------------------------------------------------------------------------------

    private void ExcluindoAluno(){

    }

//-----------------------------------------------------------------------------------------------------------------

    private void ListarAlunoX(){

    }
    //-----------------------------------------------------------------------------------------------------------------
    private void ListarTodos(){

    }
//-----------------------------------------------------------------------------------------------------------------

    public static void main(String[] args) {
        ArrayList<Aluno>banco = new ArrayList();

        //primeiro argumento é a chave e o segundo é o objeto
        HashMap<String, Aluno> tabela = new HashMap();

        Aluno p = new Aluno("Pedro", "Silva", LocalDate.of(2000,10,10));

        tabela.put(p.getNome(), p);

        Aluno o = new Aluno("Pedro", "Silva", LocalDate.of(2000,10,10));

        if (tabela.containsKey(o.getNome())){
            tabela.put(o.getNome(), o);
        }

        /*boolean achou = false;
        for (Aluno elemento : banco){
            if (elemento.getNome().equals("Pedro")){
                achou = true;
                break;
            }
        }
        if (!achou){
            banco.add();
        }*/


        App app = new App();
        int opcao;

        do{
            opcao = app.menu();
            switch (opcao){

                case 1 -> app.cadastrar();
                case 2 -> app.EditarAluno();
                case 3 -> app.ExcluindoAluno();
                case 4 -> app.ListarAlunoX();
                case 5 -> app.ListarTodos();
                case 6 -> {
                    System.out.println("Saindo do SIGAA 2...");
                    break;
                }
                default -> System.out.printf("Opção inválida");
            }
        }while (opcao != 6);


    }
}